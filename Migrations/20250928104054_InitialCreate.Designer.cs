// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeUI.Data;

#nullable disable

namespace RecipeUI.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20250928104054_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("RecipeUI.Models.Osszetevo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Osszetevok");
                });

            modelBuilder.Entity("RecipeUI.Models.RaktarTetel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OsszetevoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OsszetevoId");

                    b.ToTable("RaktarTetelek");
                });

            modelBuilder.Entity("RecipeUI.Models.Recept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Receptek");
                });

            modelBuilder.Entity("RecipeUI.Models.ReceptOsszetevo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OsszetevoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceptId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OsszetevoId");

                    b.HasIndex("ReceptId");

                    b.ToTable("ReceptOsszetevok");
                });

            modelBuilder.Entity("RecipeUI.Models.RaktarTetel", b =>
                {
                    b.HasOne("RecipeUI.Models.Osszetevo", "Osszetevo")
                        .WithMany("RaktarTetelek")
                        .HasForeignKey("OsszetevoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osszetevo");
                });

            modelBuilder.Entity("RecipeUI.Models.ReceptOsszetevo", b =>
                {
                    b.HasOne("RecipeUI.Models.Osszetevo", "Osszetevo")
                        .WithMany("ReceptOsszetevok")
                        .HasForeignKey("OsszetevoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeUI.Models.Recept", "Recept")
                        .WithMany("Osszetevok")
                        .HasForeignKey("ReceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osszetevo");

                    b.Navigation("Recept");
                });

            modelBuilder.Entity("RecipeUI.Models.Osszetevo", b =>
                {
                    b.Navigation("RaktarTetelek");

                    b.Navigation("ReceptOsszetevok");
                });

            modelBuilder.Entity("RecipeUI.Models.Recept", b =>
                {
                    b.Navigation("Osszetevok");
                });
#pragma warning restore 612, 618
        }
    }
}
